//apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'com.jfrog.bintray'
//
//version = "1.1.0"
//android {
//    compileSdkVersion 24
//    buildToolsVersion "24.0.2"
//    defaultConfig {
//        minSdkVersion 11
//        targetSdkVersion 24
//        versionCode 2
//        versionName version
//    }
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
//}
//
//dependencies {
//    compile fileTree(dir: 'libs', include: ['*.jar'])
//    compile 'com.android.support:recyclerview-v7:+'
//}
//
//def siteUrl = 'https://github.com/genius158/CustomAdapter'      // 项目的主页
//def gitUrl = 'https://github.com/genius158/CustomAdapter.git'   // Git仓库的url
//
//group = "com.yan.adapter"
//
//install {
//    repositories.mavenInstaller {
//        // This generates POM.xml with proper parameters
//        pom {
////            artifactId = "com.yan.adapter"
//            project {
//
//                packaging 'aar'
//                // Add your description here
//                name 'a recyclerview adapter '    //项目描述
//                url siteUrl
//                // Set your license
//                licenses {
//                    license {
//                        name 'The Apache Software License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//                developers {
//                    developer {
//                        id 'yan'        //填写的一些基本信息
//                        name 'yan'
//                        email 'yanxianwei1114@gmail.com'
//                    }
//                }
//                scm {
//                    connection gitUrl
//                    developerConnection gitUrl
//                    url siteUrl
//                }
//            }
//        }
//    }
//}
//
//android.libraryVariants.all { variant ->
//    println "create generate${variant.name.capitalize()}Javadoc"
//    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
//        // title = ''
//        // description = ''
//        source = variant.javaCompile.source
//        classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
//        options {
//            encoding "utf-8"
//            links "http://docs.oracle.com/javase/7/docs/api/"
//            linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
//        }
//        exclude '**/BuildConfig.java'
//        exclude '**/R.java'
//    }
//    task("javadoc${variant.name.capitalize()}Jar", type: Jar, dependsOn: "generate${variant.name.capitalize()}Javadoc") {
//        classifier = 'javadoc'
//        from tasks.getByName("generate${variant.name.capitalize()}Javadoc").destinationDir
//    }
//    artifacts {
//        archives tasks.getByName("javadoc${variant.name.capitalize()}Jar")
//    }
//}
////
////task sourcesJar(type: Jar) {
////    from android.sourceSets.main.java.srcDirs
////    classifier = 'sources'
////}
////task javadoc(type: Javadoc) {
////    options.encoding = "UTF-8"
////    source = android.sourceSets.main.java.srcDirs
////    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
////}
////task javadocJar(type: Jar, dependsOn: javadoc) {
////    classifier = 'javadoc'
////    from javadoc.destinationDir
////}
////artifacts {
////    archives javadocJar
////}
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//    configurations = ['archives']
//    pkg {
//        repo = "maven"
//        name = "com.yan.adapter"    //发布到JCenter上的项目名字
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = ["Apache-2.0"]
//        publish = true
//    }
//}

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 24
        versionCode 3
        versionName "1.1.7"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

group = 'com.yan.adapter'
version = '1.1.7'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"

}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:recyclerview-v7:+'
}


task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath()
            .join(File.pathSeparator))
}

task generateJavadocsJar(type: Jar, dependsOn: generateJavadocs) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    pkg {
        repo = 'maven'
        name = 'com.yan.adapter'

        version {
            name = '1.1.7'
            desc = "a adapter for recyclerView"
            vcsTag = '1.1.7'
        }

        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/genius158/CustomAdapter.git'
        websiteUrl = 'https://github.com/genius158/CustomAdapter'
    }

    configurations = ['archives']


}
